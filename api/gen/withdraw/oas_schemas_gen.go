// Code generated by ogen, DO NOT EDIT.

package api

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// DeductPointsInternalServerError is response for DeductPoints operation.
type DeductPointsInternalServerError struct{}

func (*DeductPointsInternalServerError) deductPointsRes() {}

// DeductPointsOK is response for DeductPoints operation.
type DeductPointsOK struct{}

func (*DeductPointsOK) deductPointsRes() {}

// DeductPointsPaymentRequired is response for DeductPoints operation.
type DeductPointsPaymentRequired struct{}

func (*DeductPointsPaymentRequired) deductPointsRes() {}

type DeductPointsReq struct {
	Order string  `json:"order"`
	Sum   float64 `json:"sum"`
}

// GetOrder returns the value of Order.
func (s *DeductPointsReq) GetOrder() string {
	return s.Order
}

// GetSum returns the value of Sum.
func (s *DeductPointsReq) GetSum() float64 {
	return s.Sum
}

// SetOrder sets the value of Order.
func (s *DeductPointsReq) SetOrder(val string) {
	s.Order = val
}

// SetSum sets the value of Sum.
func (s *DeductPointsReq) SetSum(val float64) {
	s.Sum = val
}

// DeductPointsUnauthorized is response for DeductPoints operation.
type DeductPointsUnauthorized struct{}

func (*DeductPointsUnauthorized) deductPointsRes() {}

// DeductPointsUnprocessableEntity is response for DeductPoints operation.
type DeductPointsUnprocessableEntity struct{}

func (*DeductPointsUnprocessableEntity) deductPointsRes() {}

// NewOptDeductPointsReq returns new OptDeductPointsReq with value set to v.
func NewOptDeductPointsReq(v DeductPointsReq) OptDeductPointsReq {
	return OptDeductPointsReq{
		Value: v,
		Set:   true,
	}
}

// OptDeductPointsReq is optional DeductPointsReq.
type OptDeductPointsReq struct {
	Value DeductPointsReq
	Set   bool
}

// IsSet returns true if OptDeductPointsReq was set.
func (o OptDeductPointsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeductPointsReq) Reset() {
	var v DeductPointsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeductPointsReq) SetTo(v DeductPointsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeductPointsReq) Get() (v DeductPointsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDeductPointsReq) Or(d DeductPointsReq) DeductPointsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
